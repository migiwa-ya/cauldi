---
export async function getStaticPaths() {
  try {
    const response = await fetch('https://your-cloudflare-worker-url/api/herbs');
    const herbs = await response.json();
    return herbs.map((herb: { name_scientific: string }) => ({ params: { slug: herb.name_scientific } }));
  } catch (error) {
    // Fallback to dummy paths for local development
    return [
      { params: { slug: 'ScientificName1' } },
      { params: { slug: 'ScientificName2' } },
      { params: { slug: 'ScientificName3' } },
    ];
  }
}

import Layout from "../../layouts/Layout.astro";
import HerbImages from "../../components/HerbImages.tsx";
import HerbCompounds from "../../components/HerbCompounds.tsx";

const { slug } = Astro.params;
type Herb = {
  name_jp: string;
  name_common_jp: string;
  name_scientific: string;
  name_en: string;
  description: string;
  flavor_profile: string;
  research_papers: string;
  images: { url: string; caption: string }[];
  compounds: { name: string; effect: string }[];
  relatedReports: { id: number; title: string }[];
  tags: { id: number; name: string; type: string; description: string }[];
};

let herb: Herb;

try {
  const response = await fetch(
    `https://your-cloudflare-worker-url/api/herbs/${slug}`
  );
  herb = await response.json();
  // Assuming the API returns related reports and tags as part of the herb data
  herb.relatedReports = herb.relatedReports || [];
  herb.tags = herb.tags || [];
} catch (error) {
  // Fallback to dummy data for local development
  herb = {
    name_jp: "ハーブ名",
    name_common_jp: "一般名",
    name_scientific: slug,
    name_en: "English Name",
    description: "ここにハーブの説明が入ります。",
    flavor_profile: "フレーバープロファイル",
    research_papers: "関連研究論文",
    images: [
      { url: "/path/to/image1.jpg", caption: "画像1のキャプション" },
      { url: "/path/to/image2.jpg", caption: "画像2のキャプション" },
    ],
    compounds: [
      { name: "成分名1", effect: "効果1" },
      { name: "成分名2", effect: "効果2" },
    ],
    relatedReports: [
      { id: 1, title: "レポート1" },
      { id: 2, title: "レポート2" }
    ],
    tags: [
      { id: 1, name: "フレーバー", type: "flavor", description: "フレーバーに関するタグ" },
      { id: 2, name: "ムード", type: "mood", description: "ムードに関するタグ" }
    ]
  };
}
---

<Layout>
  <header class="bg-green-100 p-4">
    <h1 class="text-3xl font-bold">{herb.name_jp} ({herb.name_scientific})</h1>
    <h2 class="text-xl">{herb.name_common_jp} / {herb.name_en}</h2>
  </header>
  <main class="p-4 space-y-6">
    <section>
      <h3 class="text-2xl font-semibold">説明</h3>
      <p class="text-base">{herb.description}</p>
    </section>
    <section>
      <h3 class="text-2xl font-semibold">関連タグ</h3>
      <ul>
        {herb.tags.map((tag: { id: number, name: string, type: string, description: string }) => (
          <li>
            <span class="font-bold">{tag.name}</span>: {tag.description}
          </li>
        ))}
      </ul>
    </section>
    <section>
      <h3 class="text-2xl font-semibold">関連レポート</h3>
      <ul>
        {herb.relatedReports.map((report: { id: number, title: string }) => (
          <li>
            <a href={`/reports/${report.id}`} class="text-blue-500 underline">{report.title}</a>
          </li>
        ))}
      </ul>
    </section>
    <section>
      <h3 class="text-2xl font-semibold">フレーバープロファイル</h3>
      <p class="text-base">{herb.flavor_profile}</p>
    </section>
    <section>
      <h3 class="text-2xl font-semibold">画像</h3>
      <HerbImages images={herb.images} />
    </section>
    <section>
      <h3 class="text-2xl font-semibold">成分</h3>
      <HerbCompounds compounds={herb.compounds} />
    </section>
    <section>
      <h3 class="text-2xl font-semibold">関連研究論文</h3>
      <p class="text-base">{herb.research_papers}</p>
    </section>
  </main>
</Layout>
