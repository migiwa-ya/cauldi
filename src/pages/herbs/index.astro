---
import Layout from "../../layouts/Layout.astro";
import db from "../../../staticql.config.ts";
import type { Herb } from "../../types/herbs";
import Breadcrumb, { type BreadcrumbProps } from "../../components/Breadcrumb";
import { groupByKeyInitial } from "../../utils/array";
import "../../styles/herbs/index.css";

const herbs: Herb[] = await db.from("herbs").exec();

const names = [...new Set(herbs.map((h) => h.name.substring(0, 1)).sort())];
const groupByName = groupByKeyInitial(herbs, "name");

const scientifics = [
  ...new Set(herbs.map((h) => h.nameScientific.substring(0, 1)).sort()),
];
const groupByScientific = groupByKeyInitial(herbs, "nameScientific");

const breadCrumbItems: BreadcrumbProps["items"] = [
  { label: "Home", link: "/" },
  { label: "ハーブ一覧" },
];
---

<Layout>
  <div class="globalHeading">
    <div class="globalHeadingBody container">
      <Breadcrumb items={breadCrumbItems} />

      <h1 class="bold">ハーブ一覧</h1>
    </div>
  </div>

  <div class="content container">
    <article>
      <h2 class="headingLine">ハーブ名一覧</h2>
      <div class="index">
        {
          names.map((name) => (
            <section class="indexItem">
              <strong>{name}</strong>
              {groupByName[name].map((herb) => (
                <a href={`/herbs/${herb.slug}`}>{herb.name}</a>
              ))}
            </section>
          ))
        }
      </div>
    </article>

    <article>
      <h2 class="headingLine">ハーブ学名一覧</h2>
      <div class="index">
        {
          scientifics.map((scientific) => (
            <section class="indexItem">
              <strong>{scientific}</strong>
              {groupByScientific[scientific].map((herb) => (
                <a href={`/herbs/${herb.slug}`}>{herb.nameScientific}</a>
              ))}
            </section>
          ))
        }
      </div>
    </article>
  </div>
</Layout>
