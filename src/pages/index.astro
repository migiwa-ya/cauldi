---
import Layout from "../layouts/Layout.astro";
import ListNewsInfinite from "../components/ListNewsInfinite";
import ListNewsItem from "../components/ListItem";
import "../styles/index.css";
import Seo from "../components/Seo.astro";
import type { ReportsRecord, HerbsRecord } from "../types/staticql-types";
import config from "../../public/staticql.config.json";
import { defineStaticQL, type StaticQLConfig } from "staticql";
import { FsRepository } from "staticql/repo/fs";

const staticql = defineStaticQL(config as StaticQLConfig)({
  repository: new FsRepository("public"),
});

const herbs = await staticql
  .from<HerbsRecord>("herbs")
  .orderBy("updatedAt", "desc")
  .pageSize(3)
  .exec();

const reports = await staticql
  .from<ReportsRecord>("reports")
  .join("herbs")
  .join("reportGroup")
  .join("process")
  .orderBy("updatedAt", "desc")
  .pageSize(3)
  .exec();

const initialHerbs = herbs.data.map((herb) => ({
  key: herb.slug,
  displayName: herb.name,
  link: `/herbs/${herb.slug}/`,
  images: [
    {
      path: `/images/herbs/${herb.slug}/thumbnail.webp`,
      label: herb.nameScientific,
    },
  ],
  content: herb.overview,
  updatedAt: herb.updatedAt,
}));

const initialReports = reports.data.map((report) => ({
  key: report.reportGroupSlug + report.slug,
  displayName: `${report.herbs?.map((herb) => herb.name).join("・")}の${report.process?.name}のレポート`,
  images: report.herbs!.map((herb) => ({
    path: `/images/herbs/${herb.slug}/thumbnail.webp`,
    label: herb.nameScientific,
  })),
  link: `/reports/${report.reportGroupSlug}/`,
  content: report.ingredients.join("・") + "。" + report.summary,
  updatedAt: report.updatedAt,
}));

const newsItems = [...initialHerbs, ...initialReports].sort(
  (a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime()
);
---

<Layout>
  <Seo
    slot="head"
    title="Cauldi | ハーブの期待される効能・使い方・解説。"
    description="Cauldi（コールディ）は、ハーブの期待される効能や使い方を丁寧にまとめ、情報と体験レポートを発信するハーブ専門サイトです。"
    url=`${Astro.site}`
    ldJson={{
      "@context": "https://schema.org",
      "@type": "WebSite",
      name: "Cauldi",
      url: `${Astro.site}`,
    }}
  />

  <div class="globalHeading">
    <div class="globalHeadingBody container">
      <p>
        ハーブの知識と暮らしの工夫を紹介するハーブ情報サイト「<strong
          >Cauldi</strong
        >」。
      </p>
    </div>
  </div>

  <div class="index content container">
    {newsItems.map((item) => <ListNewsItem item={item} />)}

    {
      (herbs.pageInfo.hasNextPage || reports.pageInfo.hasNextPage) && (
        <ListNewsInfinite
          herbPageInfo={herbs.pageInfo}
          reportPageInfo={reports.pageInfo}
          client:visible
        />
      )
    }
  </div>
</Layout>
