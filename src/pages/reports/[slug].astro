---
import type { APIContext } from "astro";
import db from "../../../staticql.config.ts";
import Layout from "../../layouts/Layout.astro";

import type { Report, Process } from "../../types/reports";
import Promotion from "../../components/Promotion";
import Breadcrumb, { type BreadcrumbProps } from "../../components/Breadcrumb";
import { groupBy } from "../../utils/array";
import ReportDetail from "../../components/ReportDetail";

export async function getStaticPaths() {
  const reports: Report[] = await db
    .from("reports")
    .join("herbs")
    .join("reportGroups")
    .join("usageMethods")
    .options({ indexMode: "only" })
    .exec();

  const groupedReports = groupBy(
    await Promise.all(
      reports.map(async (report) => {
        const process: Process[] = await db
          .from("processes")
          .where("slug", "eq", report.reportGroups[0].processSlug)
          .options({ indexMode: "only" })
          .exec();

        report.process = process[0];

        return report;
      })
    ),
    "reportGroupSlug"
  );

  return Object.entries(groupedReports).map(([reportGroupId, reports]) => ({
    params: { slug: reportGroupId },
    props: { reports },
  }));
}

export function GET({ props }: APIContext) {
  return new Response(JSON.stringify({ reports: props.reports }));
}

const { reports }: { reports: Report[] } = Astro.props;

const breadCrumbItems: BreadcrumbProps["items"] = [
  { label: "Home", link: "/" },
  { label: "ハーブ利用レポート", link: "/reports" },
  {
    label: `${reports[0].herbs.map((herb) => herb.name).join("・")}の${reports[0].process?.name}の作り方`,
  },
];
---

<Layout>
  <div class="globalHeading">
    <div class="globalHeadingBody container">
      <Breadcrumb items={breadCrumbItems} />

      <h1 class="bold">
        {reports[0].herbs.map((herb) => herb.name).join("・")}の{
          reports[0].process?.name
        }の作り方
      </h1>
    </div>
  </div>

  <div class="content container">
    {reports.map((report) => <ReportDetail report={report} />)}
    <Promotion />
  </div>
</Layout>
